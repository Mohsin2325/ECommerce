<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ECommerce"
        xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation" x:Class="ECommerce.Dashboard"
        xmlns:l="clr-namespace:System.Windows.Input;assembly=System"
        xmlns:loc="clr-namespace:System.Windows.Converters;assembly=WindowsBase"   
        xmlns:behv="clr-namespace:ECommerce.Behavior"
        mc:Ignorable="d"
        xmlns:converters="clr-namespace:ECommerce.Converters"
        xmlns:models="clr-namespace:ECommerce.Model"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        Title="Dashboard" Height="498.438" Width="604.688" 
        xmlns:custControl="clr-namespace:ECommerce.Controls"
    >
    
    <Window.Resources>
        <converters:ValueSubtractor x:Key="ValueSub"/>
        <converters:MultiTextChecker x:Key="MultiCheck"/>
        <converters:BoolToVisibiltyConverter x:Key="booltovisibility"/>
        <converters:DisplayAttributeConverter x:Key="DisplayattributeConverter"/>
        <ControlTemplate x:Key="ButtonTemplate">
            <StackPanel>
                <Ellipse Fill="LightSkyBlue" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"></Ellipse>
            </StackPanel>
            <ControlTemplate.Triggers>
                <EventTrigger RoutedEvent="Button.Click">
                    <EventTrigger.Actions>
                        <BeginStoryboard Name="ButtonAnim">
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty = "Width" Duration = "0:0:4">
                                    <LinearDoubleKeyFrame Value = "60" KeyTime = "0:0:0"/>
                                    <LinearDoubleKeyFrame Value = "50" KeyTime = "0:0:1"/>
                                    <LinearDoubleKeyFrame Value = "40" KeyTime = "0:0:2"/>
                                    <LinearDoubleKeyFrame Value = "30" KeyTime = "0:0:3"/>
                                </DoubleAnimationUsingKeyFrames>

                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty = "Height" 
                           Duration = "0:0:4">
                                    <LinearDoubleKeyFrame Value = "30" KeyTime = "0:0:0"/>
                                    <LinearDoubleKeyFrame Value = "20" KeyTime = "0:0:1"/>
                                    <LinearDoubleKeyFrame Value = "10" KeyTime = "0:0:2"/>
                                    <LinearDoubleKeyFrame Value = "5" KeyTime = "0:0:3"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>

                        </BeginStoryboard>

                    </EventTrigger.Actions>
                </EventTrigger>
                <EventTrigger RoutedEvent="MouseLeave" >
                    <StopStoryboard BeginStoryboardName="ButtonAnim" />
                </EventTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <DataTemplate x:Key="DataTemplateKey1">
            <WrapPanel>
                <CheckBox Content="{Binding ID, Mode=TwoWay}"/>
                <TextBox Text="{Binding Name, Mode=TwoWay}"/>
            </WrapPanel>
        </DataTemplate>
        <DataTemplate x:Key="DataTemplateKey2">
            <WrapPanel>
                <CheckBox Content="{Binding ID, Mode=TwoWay}"/>
                <Button Content="{Binding Name, Mode=TwoWay}"/>
            </WrapPanel>
        </DataTemplate>
        <behv:DynamicDataTemplateSelector x:Key="DataTemplateSelect" data1="{StaticResource DataTemplateKey1}" data2="{StaticResource DataTemplateKey2}">
            
        </behv:DynamicDataTemplateSelector>
    </Window.Resources>
    <Grid RenderTransformOrigin="0.377,0.521" Margin="0,32,2,17">
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="100"></RowDefinition>
            <!--<RowDefinition></RowDefinition>-->
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="100"/>
            <ColumnDefinition/>
            <!--<ColumnDefinition></ColumnDefinition>-->
        </Grid.ColumnDefinitions>

        <Grid Margin="0,10,0,90" Grid.RowSpan="2">
            <Grid.RowDefinitions>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
            </Grid.RowDefinitions>
            <Expander Name="expander" Grid.Row="0" Height="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Height}" Width="{Binding RelativeSource={RelativeSource Self},Path=Height}" Margin="0,0,0,39.5" DockPanel.Dock="Top">

                <StackPanel>
                    <TextBox  Background="LightBlue" Height="{Binding height, RelativeSource={RelativeSource AncestorType={x:Type Expander}}}" RenderTransformOrigin="0.602,2.948" behv:TextboxBehavior.CorrectTextboxProperty="MOhsin"/>
                    <TextBlock Height="{Binding ElementName=expander,Path=Height}" Text="{Binding EmployeeDisplayName,Mode=TwoWay}" >
                        <!--<TextBlock.Text>
                            <MultiBinding >


                                <Binding Path="ad.DisplayAttribute[customer.Name]" Mode="TwoWay"/>
                                <Binding RelativeSource="{RelativeSource Self}"/>
                                <Binding ElementName="customer.Name"/>
                            </MultiBinding>
                        </TextBlock.Text>-->
                    </TextBlock>                    
                </StackPanel>
            </Expander>

            <Button  Width="60" Height="60"  Content="{Binding customer.ID, Mode=TwoWay}" Command="{Binding ButtonCommand}" Margin="19,26,21,20" Grid.Row="1" Template="{StaticResource ButtonTemplate}">

            </Button>

        </Grid>

        <DataGrid x:Name="dataGrid" Grid.Column="1" HorizontalAlignment="Left" Margin="29,31,0,0" VerticalAlignment="Top" Height="255" Width="418" ItemsSource="{Binding Customers, Mode=TwoWay}" 
                models:GridCommand.DataGridDoubleClickCommand="{Binding GridDoubleClick}"  MouseRightButtonUp="DataGrid_MouseRightButtonUp_1" ItemTemplate="{StaticResource DataTemplateKey1}">
            <!--<DataGrid.ItemTemplate>
                <DataTemplate>
                    <WrapPanel>
                        <CheckBox Content="{Binding ID, Mode=TwoWay}"/>
                        <TextBox Text="{Binding Name, Mode=TwoWay}"/>
                    </WrapPanel>
                </DataTemplate>
            </DataGrid.ItemTemplate>-->

            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Add">
                        <MenuItem.Template>
                            <ControlTemplate>
                                <WrapPanel>
                                    <TextBox Name="DataGridTextID" Width="50"></TextBox>
                                    <TextBox Name="DataGridTextName" Width="50"></TextBox>
                                    <Button Content="Save" Command="{Binding SaveCommand}" CommandParameter="{Binding ElementName=DataGridTextName,Path=Text}">
                                        <Button.IsEnabled>
                                            <MultiBinding Converter="{StaticResource MultiCheck}">
                                                <Binding ElementName="DataGridTextID" Path="Text"></Binding>
                                                <Binding ElementName="DataGridTextName" Path="Text"></Binding>
                                            </MultiBinding>
                                        </Button.IsEnabled>
                                    </Button>
                                </WrapPanel>
                            </ControlTemplate>                            
                        </MenuItem.Template>
                    </MenuItem>
                </ContextMenu>
            </DataGrid.ContextMenu>

        </DataGrid>

        <TabControl x:Name="tabControl" Grid.Column="1" HorizontalAlignment="Left" Height="90" Margin="77,0,0,0" Grid.Row="1" VerticalAlignment="Top" Width="345">
            <TabItem Header="TabItem">
                <!--<Grid Background="#FFE5E5E5"/>-->


                <DataGrid Width="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Width}" Height="{Binding RelativeSource={RelativeSource Self},Path=Width}" ItemsSource="{Binding Customers, Mode=TwoWay}">
                    <DataGrid.ItemTemplate>
                        <DataTemplate>
                            <WrapPanel>
                                <CheckBox Content="{Binding ID, Mode=TwoWay}"/>
                                <TextBox Text="{Binding Name[Name], Mode=TwoWay}"/>
                                <DatePicker ></DatePicker>
                                
                            </WrapPanel>
                        </DataTemplate>

                    </DataGrid.ItemTemplate>
                    <DataGrid.Columns >
                        <DataGridTemplateColumn models:GridCommand.DataGridRightClickCommand="{Binding GridRightClick}">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>

                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                    </DataGrid.Columns>

                </DataGrid>

            </TabItem>
            <TabItem Header="TabItem2">
                <!--<Grid Background="#FFE5E5E5"/>-->
                <StackPanel>
                    <ListBox SelectionMode="Multiple" ItemsSource="{Binding Customers, Mode=TwoWay}"  ItemTemplateSelector="{StaticResource DataTemplateSelect}">
                     
                    </ListBox>
                </StackPanel>
            </TabItem>
        </TabControl>
        <TextBox Grid.Row="1" Width="50" Height="50">
            <TextBox.Template>
                <ControlTemplate>                    
                <custControl:AutoCompleteCombox ItemsSource="{Binding Customer, Mode=TwoWay}"></custControl:AutoCompleteCombox>
                </ControlTemplate>
            </TextBox.Template>
        </TextBox>
    </Grid>
</Window>
